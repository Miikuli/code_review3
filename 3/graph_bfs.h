/*
Дано описание ориентированного графа в текстовом файле с именем FileName. в виде матрицы смежности. 
Первая строка файла содержит количество вершин графа (n), а следующие n
строк содержат матрицу смежности (m), m[i][j]=0, если дуги из вершины i в вершину j не существует,
иначе m[i][j] хранит вес соответствующей дуги. Выполнить поиск в ширину от вершины
с номером k. В результате вывести номера вершин графа, достижимые для данной вершины, в
порядке их обхода при поиске в ширину. Если на очередном шаге сортировки имелось несколько
равноправных вершин, перечислять их в порядке возрастания номеров вершин.
 */

#include <vector>
#include <string>

  /**
   * @brief Читает матрицу смежности из файла
   * @param filename Имя файла с матрицей
   * @param n Выходной параметр - количество вершин
   * @param errorFlag Флаг ошибки (true при ошибке)
   * @return Матрица смежности
   */
std::vector<std::vector<int>> ReadGraph(const std::string& filename, int& n, bool& errorFlag);

/**
 * @brief Выполняет BFS с сортировкой соседей
 * @param graph Матрица смежности
 * @param start Начальная вершина
 * @return Вектор с порядком обхода вершин
 */
std::vector<int> Bfs(const std::vector<std::vector<int>>& graph, int start);
