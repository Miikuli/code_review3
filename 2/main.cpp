/*
В текстовом файле с именем filename дано арифметическое выражение в префиксной
форме. Операндами в выражении являются целые числа из промежутка от 0 до 9. Используемые
операции: сложение(+), вычитание(-), умножение(*), деление нацело(/), целочисленный остаток
от деления(%) и возведение в степень(^). Постройте дерево, соответствующее данному выражению. Знаки операций кодируйте числами: сложение(-1), вычитание(-2), умножение(-3), деление(-
4), остаток от деления(-5), возведение в степень (-6). Преобразуйте дерево, вычислив значения
всех поддеревьев, для которых результат вычислений является числом из промежутка от 0 до 9
(замените такие поддеревья их значениями). Выведите указатель на корень полученного дерева
*/

#include "calctree.h"
#include <iostream>

void PrintTree(const Node* node, int indent = 0) {
    if (!node) return;
    PrintTree(node->right.get(), indent + 4);
    std::cout << std::string(indent, ' ') << node->value << '\n';
    PrintTree(node->left.get(), indent + 4);
}

int main() {
    CalcTree tree("expression.txt");

    if (tree.HasErrors()) {
        std::cout << "Ошибка при построении дерева!\n";
        return 1;
    }

    std::cout << "Дерево до упрощения:\n";
    PrintTree(tree.GetRoot());

    tree.Simplify();

    if (tree.HasErrors()) {
        std::cout << "Ошибка при упрощении дерева!\n";
    }

    std::cout << "\nДерево после упрощения:\n";
    PrintTree(tree.GetRoot());

    return 0;
}
